<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>etcd on Euraxluo Blog</title><link>/tags/etcd/</link><description>Recent content in etcd on Euraxluo Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2016-{year} Euraxluo. All Rights Reserved.</copyright><lastBuildDate>Thu, 10 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/etcd/index.xml" rel="self" type="application/rss+xml"/><item><title>etcd 基本使用</title><link>/posts/note/etcd%E5%85%A5%E9%97%A8/</link><pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate><guid>/posts/note/etcd%E5%85%A5%E9%97%A8/</guid><description>连接客户端 config = clientv3.Config{ Endpoints: []string{&amp;#34;127.0.0.1:2379&amp;#34;}, // 集群列表 DialTimeout: 5 * time.Second, } // 建立一个客户端 if client, err = clientv3.New(config); err != nil { fmt.Println(err) return } put //PUT if putResp, err = kv.Put(context.TODO(), &amp;#34;/prefix/keys/k1&amp;#34;, &amp;#34;v1&amp;#34;, clientv3.WithPrevKV(), //请求 prev KV ); err != nil { fmt.Println(err) } else { fmt.Println(&amp;#34;Revision:&amp;#34;, putResp.Header.Revision) // 操作 版本号 fmt.Println(&amp;#34;ClusterId:&amp;#34;, putResp.Header.ClusterId) // 交互集群id fmt.Println(&amp;#34;MemberId:&amp;#34;, putResp.Header.MemberId) // 交互节点 fmt.Println(&amp;#34;RaftTerm:&amp;#34;, putResp.Header.RaftTerm) //raft 任期 if putResp.PrevKv != nil { // 打印value fmt.</description></item></channel></rss>