<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on Euraxluo Blog</title>
    <link>https://euraxluo.gitee.io/blog/tags/c/</link>
    <description>Recent content in C on Euraxluo Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016-{year} Euraxluo. All Rights Reserved.</copyright>
    <lastBuildDate>Thu, 21 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://euraxluo.gitee.io/blog/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C语言小计</title>
      <link>https://euraxluo.gitee.io/blog/posts/note/c%E8%AF%AD%E8%A8%80%E5%B0%8F%E8%AE%A1/</link>
      <pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://euraxluo.gitee.io/blog/posts/note/c%E8%AF%AD%E8%A8%80%E5%B0%8F%E8%AE%A1/</guid>
      <description>C语言小计 Unix C   内核-》系统调用-》shell/共用函数库-》应用程序
  系统调用和库函数
  库函数会调用系统调用来实现自己的算法
  公用函数库构建在系统调用之上，应用程序既可以使公用函数库，也可以使用系统调用
    口令文件：/etc/passwd 字段结构：
登录名：加密口令：UID：GID：注释字段：起始目录：sell
  文件系统：
 /是root目录 /和空字符不能出现在文件名字中，斜线用来分隔开构成路径名的各文件名，空字符用来终止一个路径名 工作目录：每个进程都有一个工作目录，所有的相对路径名都从工作目录开始解释，进程可以使用chdir()更改工作目录,以/开始的路径名是绝对路径名 登陆时工作目录设置为起始目录，从口令文件中取得    输入输出
 不带缓冲区的io：open,read,write,lseek,close stdout &amp;gt; file可以把标准输出或者符号左边的字符重定向到文件    进程
  每个进程都有一个pid，pid_t保证可以用long保存
  进程控制：fork,waitpid,exec(exec函数有很多变体)
  signal，用于通知进程发生了某种情况；进程会：
  忽略信号
  按系统默认方式处理
  提供一个函数，信号捕捉（类似错误处理？）
      时间值
 用户cpu时间：执行用户指令所用的时间 系统cpu时间：该进程执行内核程序经历的时间 时钟时间：进程运行的时间总量 CPU时间 = time_t + clock_t 问题：若日历时间放在带符号的32位int中，哪一年会溢出？怎么扩展    文件IO（不带缓冲的IO）   不带缓冲：指的是每个read和write都调用系统调用，这些函数不是ISO C的组成部分</description>
    </item>
    
  </channel>
</rss>
