<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ros on Euraxluo Blog</title>
    <link>https://euraxluo.github.io/posts/ros/</link>
    <description>Recent content in ros on Euraxluo Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016-{year} Euraxluo. All Rights Reserved.</copyright>
    <lastBuildDate>Sun, 10 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://euraxluo.github.io/posts/ros/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ROS基础学习1</title>
      <link>https://euraxluo.github.io/posts/ros/ros%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://euraxluo.github.io/posts/ros/ros%E5%9F%BA%E7%A1%80/</guid>
      <description>利用enve使用在ros中使用python3 因为ros的python有很多依赖需要使用C，python3的支持不太好。我们可以让当前的环境变量依然是python2，为ros创建一个py3的enve来给它使用
查看版本： pip -V pip3 -V python -V python3 -V 我的pip和python都是py2.7的
接下来在你的工作空间中创建enve
mkdir -p catkin_ws/src cd catkin_ws pip3 install virtualenv #先安装 virtualenv -p /usr/bin/python3 venv#创建一个名为enve的python3环境 source venv/bin/activate #激活enve #创建成功，你应该会看到shell的变化，你可以在这里试一下pip和python，会发现已经变成python3了。 deactivate #关闭enve SLAM 同时定位建模 移动机器人的主要任务：定位，建模，路径规划
slam 建模工具包： Gmapping，Karto，Heotor，Gartographer
ROS支持的定位工具包： 自适应蒙特卡罗定位：AMCL
导航工具包集 Navigation：Local，Global
Global：Dijkstra，A×
Local;DWA
SLAM中的MAP： 本质也是一个msg
Topic：/map
Type：nav_msgs/OccupancyGrid(栅格地图)
Gmapping Topic 输入：base到odom的tf， /scan
输出：
定位信息：map_frame&amp;gt;odom的tf消息
mapping:topic -/map _msg
Karto topic 输入和Gmapping一样
输出：map_frame -&amp;gt;odom
Navigation matepkg </description>
    </item>
    
    <item>
      <title>ROS基础学习2</title>
      <link>https://euraxluo.github.io/posts/ros/ros%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://euraxluo.github.io/posts/ros/ros%E5%85%A5%E9%97%A8/</guid>
      <description>ROS 工作空间:组织和管理功能包的文件夹 catkin workspace
 build (cmake,catkin缓存中间件)
  src(package 源代码)
   package1(是catkin编译的基本单元)
    package2
    folder
     package3
      package3
    devel(目标文件)
   头文件
    动态连接库
    静态连接库
    可执行文件
  catkin(编译工具) catkin ROS定制的编译构建系统
是对CMake的扩展
常用命令:
catkin_make:  初始化,建立工作空间</description>
    </item>
    
    <item>
      <title>Ubuntu18.04安装ROS</title>
      <link>https://euraxluo.github.io/posts/ros/ros%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://euraxluo.github.io/posts/ros/ros%E5%AE%89%E8%A3%85/</guid>
      <description>Ubuntu18.04安装ROS 源配置: sudo sh -c &#39;. /etc/lsb-release &amp;amp;&amp;amp; echo &amp;quot;deb &amp;lt;http://mirrors.ustc.edu.cn/ros/ubuntu/&amp;gt; $DISTRIB_CODENAME main&amp;quot; &amp;gt; /etc/apt/sources.list.d/ros-latest.list&#39;更新: sudo apt-get update
添加密匙: sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
和官网步骤一样: sudo apt-get install ros-melodic-desktop-full
sudo rosdep init
报错: 由于py版本导致,网上说切换为python2.7,我失败了
Traceback (most recent call last): File &amp;quot;/usr/bin/rosdep&amp;quot;, line 3, in &amp;lt;module&amp;gt; from rosdep2.main import rosdep_mainModuleNotFoundError: No module named &#39;rosdep2&#39;重头戏来了: sudo apt-get install python3-catkin-pkg
 sudo apt-get install python3-rosinstall python3-rosinstall-generator python3-wstool build-essential</description>
    </item>
    
  </channel>
</rss>
