<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Euraxluo Blog</title><link>/series/java/</link><description>Recent content in Java on Euraxluo Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2016-{year} Euraxluo. All Rights Reserved.</copyright><lastBuildDate>Thu, 22 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="/series/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Servlet1</title><link>/posts/java/servlet1/</link><pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate><guid>/posts/java/servlet1/</guid><description>Servlet HTTP协议 是客户端与服务器通信的一种方式
参考链接 request: 请求行 请求头 请求体 response: 响应行 响应头 响应体 Get: GET用于信息获取，而且应该是安全的和幂等的
带上数据,在URL上面拼接
www.baidu.com name = zhanshan
age = 18
url:www.baidu.com?name = zhanshan&amp;amp;age = 18
url可见
传输方式
HTTP header
设计目的
获取数据
具有安全隐患,GET方法不会改变服务器端数据，所以不会产生副作用
GET请求返回的内容可以被浏览器缓存起来
Post: 以流的方式传输,数据无限制
url不可见
传输方式
HTTP body
设计目的
发送数据
用户可能会提交一些错误的数据
浏览器不会缓存POST请求返回的内容
####　幂等（idempotent、idempotence）是一个数学或计算机学概念，常见于抽象代数中。
幂等有以下几种定义：
​ 对于单目运算，如果一个运算对于在范围内的所有的一个数多次进行该运算所得的结果和进行一次该运算所得的结果是一样的，那么我们就称该运算是幂等的。 比如绝对值运算就是一个例子，在实数集中，有abs(a) = abs(abs(a)) 。
​ 对于双目运算，则要求当参与运算的两个值是等值的情况下，如果满足运算结果与参与运算的两个值相等，则称该运算幂等，如求两个数的最大值的函数，有在实数集中幂等，即max(x,x) = x 。
看完上述解释后，应该可以理解GET幂等的含义了。
幂等：如果目标是当用户打开一个链接时，他可以确信从自身的角度来看没有改变资源即可。
非幂等：以新闻网站为例，读者对新闻发表自己的评论应该通过POST实现，因为在评论提交后站点的资源已经不同了，或者说资源被修改了。
ServletConfig 写在xml文件中,一个servlet可以有多个配置信息{以servlet为单位}，同时也可以设置全局配置信息，因为可能会部署很多个servlet容器。
&amp;lt;servlet&amp;gt; &amp;lt;init-param&amp;gt; &amp;lt;param-name&amp;gt;data4&amp;lt;/param-name&amp;gt; &amp;lt;param-value&amp;gt;value4&amp;lt;/param-value&amp;gt; &amp;lt;/init-param&amp;gt; &amp;lt;!--配置信息--&amp;gt; &amp;lt;servlet-name&amp;gt;demo&amp;lt;/servlet-name&amp;gt; &amp;lt;servlet-class&amp;gt;main.</description></item><item><title>Servlet2</title><link>/posts/java/servlet2/</link><pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate><guid>/posts/java/servlet2/</guid><description>Cookie和Session 会话：浏览器发出http请求。服务器接受，对请求进行响应，浏览器接受http响应
Cookie 把会话数据保存在浏览器客户端
服务器第一次访问时，服务端生成cookie，并且把这个cookie通过响应，发送给客户端，客户端把cookie保存下来，以便在最近的下一次访问中使用
缺点
Cookie有大小和数量的限制
明文传递有风险
//创建Cookie对象 Cookie userNameCookie = new Cookie(&amp;#34;userName&amp;#34;,userName); Cookie userPasswordCookie = new Cookie(&amp;#34;userPassword&amp;#34;,userPassword); //返回给访问对象 resp.addCookie(userNameCookie); resp.addCookie(userPasswordCookie); /、对外部浏览器返回的响应头进行处理 Cookie[] cookies = req.getCookies(); if(cookies != null){ for(Cookie cookie:cookies){ if (cookie.getName().equals(&amp;#34;userName&amp;#34;)) { userName = cookie.getValue(); }else if (cookie.getName().equals(&amp;#34;userPassword&amp;#34;)) { userPassword = cookie.getValue(); } } } 例子一 显示最近访问的时间。 判断账号是否正确
如果正确，则获取cookie。 但是得到的cookie是一个数组， 我们要从数组里面找到我们想要的对象。
如果找到的对象为空，表明是第一次登录。那么要添加cookie
如果找到的对象不为空， 表明不是第一次登录。
if(&amp;#34;admin&amp;#34;.equals(userName) &amp;amp;&amp;amp; &amp;#34;123&amp;#34;.equals(password)){ //获取cookie last-name --- &amp;gt; Cookie [] cookies = request.getCookies(); //从数组里面找出我们想要的cookie Cookie cookie = CookieUtil.</description></item><item><title>XML</title><link>/posts/java/xml/</link><pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate><guid>/posts/java/xml/</guid><description>Xml Xml eXtendsible markup language 可扩展的标记语言
XML 有什么用? 可以用来保存数据
可以用来做配置文件
数据传输载体
定义xml 其实就是一个文件，文件的后缀为 .xml
文档声明 简单声明， version : 解析这个xml的时候，使用什么版本的解析器解析
`&amp;lt;?xml version=&amp;quot;1.0&amp;quot; ?&amp;gt;` encoding : 解析xml中的文字的时候，使用什么编码来翻译
`&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;gbk&amp;quot; ?&amp;gt;` standalone : no - 该文档会依赖关联其他文档 ， yes&amp;ndash; 这是一个独立的文档
`&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;gbk&amp;quot; standalone=&amp;quot;no&amp;quot; ?&amp;gt;` encoding详解 在解析这个xml的时候，使用什么编码去解析。 ---解码。 文本存储时不直接存储文字， 而是存储这些文字对应的二进制 。 那么这些文字对应的二进制到底是多少呢？ 根据文件使用的编码 来得到。
默认文件保存的时候，使用的是GBK的编码保存。
所以要想让我们的xml能够正常的显示中文,解决方法:
让encoding也是GBK 或者 gb2312 .
如果encoding是 utf-8 ， 那么保存文件的时候也必须使用utf-8
保存的时候见到的ANSI 对应的其实是我们的本地编码 GBK。
为了通用，建议使用UTF-8编码保存，以及encoding 都是 utf-8
元素定义（标签） 其实就是里面的标签， &amp;lt;&amp;gt; 括起来的都叫元素 。 成对出现。 如下： &amp;lt;stu&amp;gt; &amp;lt;/stu&amp;gt;</description></item></channel></rss>